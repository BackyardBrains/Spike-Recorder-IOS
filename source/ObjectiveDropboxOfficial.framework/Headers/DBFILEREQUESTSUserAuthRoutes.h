///
/// Copyright (c) 2016 Dropbox, Inc. All rights reserved.
///
/// Auto-generated by Stone, do not modify.
///

#import <Foundation/Foundation.h>

#import "DBTasks.h"

@class DBFILEREQUESTSCreateFileRequestError;
@class DBFILEREQUESTSFileRequest;
@class DBFILEREQUESTSFileRequestDeadline;
@class DBFILEREQUESTSGetFileRequestError;
@class DBFILEREQUESTSGracePeriod;
@class DBFILEREQUESTSListFileRequestsError;
@class DBFILEREQUESTSListFileRequestsResult;
@class DBFILEREQUESTSUpdateFileRequestDeadline;
@class DBFILEREQUESTSUpdateFileRequestError;
@class DBNilObject;

@protocol DBTransportClient;

///
/// Routes for the `FileRequests` namespace
///

NS_ASSUME_NONNULL_BEGIN

@interface DBFILEREQUESTSUserAuthRoutes : NSObject

/// An instance of the networking client that each route will use to submit a
/// request.
@property (nonatomic, readonly) id<DBTransportClient> client;

/// Initializes the `DBFILEREQUESTSUserAuthRoutes` namespace container object
/// with a networking client.
- (instancetype)init:(id<DBTransportClient>)client;

///
/// Creates a file request for this user.
///
/// @param title The title of the file request. Must not be empty.
/// @param destination The path of the folder in the Dropbox where uploaded files will be sent. For apps with the app
/// folder permission, this will be relative to the app folder.
///
/// @return Through the response callback, the caller will receive a `DBFILEREQUESTSFileRequest` object on success or a
/// `DBFILEREQUESTSCreateFileRequestError` object on failure.
///
- (DBRpcTask<DBFILEREQUESTSFileRequest *, DBFILEREQUESTSCreateFileRequestError *> *)create:(NSString *)title
                                                                               destination:(NSString *)destination;

///
/// Creates a file request for this user.
///
/// @param title The title of the file request. Must not be empty.
/// @param destination The path of the folder in the Dropbox where uploaded files will be sent. For apps with the app
/// folder permission, this will be relative to the app folder.
/// @param deadline The deadline for the file request. Deadlines can only be set by Pro and Business accounts.
/// @param open Whether or not the file request should be open. If the file request is closed, it will not accept any
/// file submissions, but it can be opened later.
///
/// @return Through the response callback, the caller will receive a `DBFILEREQUESTSFileRequest` object on success or a
/// `DBFILEREQUESTSCreateFileRequestError` object on failure.
///
- (DBRpcTask<DBFILEREQUESTSFileRequest *, DBFILEREQUESTSCreateFileRequestError *> *)
     create:(NSString *)title
destination:(NSString *)destination
   deadline:(nullable DBFILEREQUESTSFileRequestDeadline *)deadline
       open:(nullable NSNumber *)open;

///
/// Returns the specified file request.
///
/// @param id_ The ID of the file request to retrieve.
///
/// @return Through the response callback, the caller will receive a `DBFILEREQUESTSFileRequest` object on success or a
/// `DBFILEREQUESTSGetFileRequestError` object on failure.
///
- (DBRpcTask<DBFILEREQUESTSFileRequest *, DBFILEREQUESTSGetFileRequestError *> *)get:(NSString *)id_;

///
/// Returns a list of file requests owned by this user. For apps with the app folder permission, this will only return
/// file requests with destinations in the app folder.
///
///
/// @return Through the response callback, the caller will receive a `DBFILEREQUESTSListFileRequestsResult` object on
/// success or a `DBFILEREQUESTSListFileRequestsError` object on failure.
///
- (DBRpcTask<DBFILEREQUESTSListFileRequestsResult *, DBFILEREQUESTSListFileRequestsError *> *)list;

///
/// Update a file request.
///
/// @param id_ The ID of the file request to update.
///
/// @return Through the response callback, the caller will receive a `DBFILEREQUESTSFileRequest` object on success or a
/// `DBFILEREQUESTSUpdateFileRequestError` object on failure.
///
- (DBRpcTask<DBFILEREQUESTSFileRequest *, DBFILEREQUESTSUpdateFileRequestError *> *)update:(NSString *)id_;

///
/// Update a file request.
///
/// @param id_ The ID of the file request to update.
/// @param title The new title of the file request. Must not be empty.
/// @param destination The new path of the folder in the Dropbox where uploaded files will be sent. For apps with the
/// app folder permission, this will be relative to the app folder.
/// @param deadline The new deadline for the file request.
/// @param open Whether to set this file request as open or closed.
///
/// @return Through the response callback, the caller will receive a `DBFILEREQUESTSFileRequest` object on success or a
/// `DBFILEREQUESTSUpdateFileRequestError` object on failure.
///
- (DBRpcTask<DBFILEREQUESTSFileRequest *, DBFILEREQUESTSUpdateFileRequestError *> *)
     update:(NSString *)id_
      title:(nullable NSString *)title
destination:(nullable NSString *)destination
   deadline:(nullable DBFILEREQUESTSUpdateFileRequestDeadline *)deadline
       open:(nullable NSNumber *)open;

@end

NS_ASSUME_NONNULL_END
